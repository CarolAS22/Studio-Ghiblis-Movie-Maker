name: Build and Push to Amazon ECS

on:
  workflow_call:
    inputs:
      deploy_env: 
        required: true
        type: string
      ecs_env_cluster:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      mariadbcs:
        required: true
  
env:
  AWS_REGION: us-east-1                 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: repositoryecr        # set this to your Amazon ECR repository name
  ECS_SERVICE: build-ecs                 # set this to your Amazon ECS service name
  ECS_TASK_DEFINITION: .github/workflows/task-definition.json # set this to the path to your Amazon ECS task definition
  CONTAINER_NAME: build          # set this to the name of the container in the


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_env }}
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws_access_key_id}}
        aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Add secrets to Task Definition
      run: |
        sed -i "s/%MariaDBConnectionString%/$MARIADBCS/g" ${{ env.ECS_TASK_DEFINITION }}
      env:
        MARIADBCS: ${{ secrets.mariadbcs }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .    
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ inputs.ecs_env_cluster }}
        wait-for-service-stability: true
